
#
# This file is created through the execution of graph-game
# do not edit this file.
#
# Copyright (c) Matthew Peters, 2023
#
digraph {
    labelloc=t
    fontsize=20
    label="goJack State Machine Game Flow"
    rankdir="TB"
    PromptPlayer [shape="parallelogram"]
    PlayerWantsToPlayAgain [shape="parallelogram"]
    PlayerTakesCard [shape="parallelogram"]
    PlayerStays [shape="parallelogram"]
    PlayerGoesBust [shape="parallelogram"]
    NewHand [shape="parallelogram"]
    NewGame [shape="parallelogram"]
    Initialized [shape="parallelogram"]
    HandIsOver [shape="parallelogram"]
    GameOver [shape="parallelogram"]
    DealtARound [shape="parallelogram"]
    DealerGoesBust [shape="parallelogram"]
    DealToPlayer [shape="parallelogram"]
    DealToDealer [shape="parallelogram"]
    AllPlayersGoBust [shape="parallelogram"]

    playAgain [shape="box"]
    determineHandResults [shape="box"]
    dealerWins [shape="box"]
    dealerGoesBust [shape="box"]
    determineIfAllPlayersBusted [shape="box"]
    dealToDealer [shape="box"]
    nextPlayersTurn [shape="box"]
    playerTakesCard [shape="box"]
    playerChooses [shape="box"]
    dealToPlayer [shape="box"]
    dealNewHand [shape="box"]
    startNewHand [shape="box"]
    initializeGame [shape="box"]

    { HandIsOver } -> playAgain -> { PlayerWantsToPlayAgain GameOver }
    { DealtARound } -> determineHandResults -> { HandIsOver }
    { AllPlayersGoBust } -> dealerWins -> { HandIsOver }
    { DealerGoesBust } -> dealerGoesBust -> { HandIsOver }
    { PlayerGoesBust } -> determineIfAllPlayersBusted -> { DealToPlayer DealToDealer AllPlayersGoBust }
    { DealToDealer } -> dealToDealer -> { DealToDealer DealtARound DealerGoesBust }
    { PlayerStays } -> nextPlayersTurn -> { DealToPlayer DealToDealer }
    { PlayerTakesCard } -> playerTakesCard -> { DealToPlayer }
    { PromptPlayer } -> playerChooses -> { PlayerTakesCard PlayerStays }
    { DealToPlayer } -> dealToPlayer -> { PlayerGoesBust PromptPlayer }
    { NewHand } -> dealNewHand -> { DealToPlayer }
    { Initialized PlayerWantsToPlayAgain } -> startNewHand -> { NewHand }
    { NewGame } -> initializeGame -> { Initialized }
}
